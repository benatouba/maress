"""feat: full db migrations end of september 2025

Revision ID: 41903b127a2c
Revises: 
Create Date: 2025-09-29 13:03:09.175754

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '41903b127a2c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('REGEX', 'TABLE_PARSING', 'NER', 'GEOCODED', 'MANUAL', name='coordinateextractionmethod').create(op.get_bind())
    sa.Enum('TITLE', 'ABSTRACT', 'INTRODUCTION', 'METHODS', 'RESULTS', 'DISCUSSION', 'CONCLUSION', 'REFERENCES', 'OTHER', name='papersections').create(op.get_bind())
    sa.Enum('TEXT', 'TABLE', 'CAPTION', 'MANUAL', 'METADATA', name='coordinatesourcetype').create(op.get_bind())
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('zotero_id', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('enc_zotero_api_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('studysite',
    sa.Column('validation_score', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('source_type', postgresql.ENUM('TEXT', 'TABLE', 'CAPTION', 'MANUAL', 'METADATA', name='coordinatesourcetype', create_type=False), nullable=False),
    sa.Column('context', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('section', postgresql.ENUM('TITLE', 'ABSTRACT', 'INTRODUCTION', 'METHODS', 'RESULTS', 'DISCUSSION', 'CONCLUSION', 'REFERENCES', 'OTHER', name='papersections', create_type=False), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('extraction_method', postgresql.ENUM('REGEX', 'TABLE_PARSING', 'NER', 'GEOCODED', 'MANUAL', name='coordinateextractionmethod', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_name'), 'tag', ['name'], unique=False)
    op.create_table('item',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('itemType', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('abstractNote', sqlmodel.sql.sqltypes.AutoString(length=8192), nullable=False),
    sa.Column('publicationTitle', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('volume', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('issue', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('pages', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('date', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('series', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('seriesTitle', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('seriesText', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('journalAbbreviation', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=8), nullable=True),
    sa.Column('doi', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
    sa.Column('issn', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('shortTitle', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.Column('archive', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('archiveLocation', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('libraryCatalog', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('callNumber', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('rights', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('extra', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('dateAdded', sa.DateTime(), nullable=True),
    sa.Column('dateModified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attachment', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('accessDate', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('study_site_id', sa.Uuid(), nullable=True),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(length=8), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['study_site_id'], ['studysite.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('study_site_id')
    )
    op.create_index(op.f('ix_item_key'), 'item', ['key'], unique=False)
    op.create_table('collection',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('creator',
    sa.Column('creatorType', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False),
    sa.Column('firstName', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('lastName', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itemtaglink',
    sa.Column('item_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('item_id', 'tag_id')
    )
    op.create_table('relation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('relation')
    op.drop_table('itemtaglink')
    op.drop_table('creator')
    op.drop_table('collection')
    op.drop_index(op.f('ix_item_key'), table_name='item')
    op.drop_table('item')
    op.drop_index(op.f('ix_tag_name'), table_name='tag')
    op.drop_table('tag')
    op.drop_table('studysite')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    sa.Enum('TEXT', 'TABLE', 'CAPTION', 'MANUAL', 'METADATA', name='coordinatesourcetype').drop(op.get_bind())
    sa.Enum('TITLE', 'ABSTRACT', 'INTRODUCTION', 'METHODS', 'RESULTS', 'DISCUSSION', 'CONCLUSION', 'REFERENCES', 'OTHER', name='papersections').drop(op.get_bind())
    sa.Enum('REGEX', 'TABLE_PARSING', 'NER', 'GEOCODED', 'MANUAL', name='coordinateextractionmethod').drop(op.get_bind())
    # ### end Alembic commands ###
