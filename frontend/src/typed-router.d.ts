/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/Home': RouteRecordInfo<'/Home', '/Home', Record<never, never>, Record<never, never>>,
    '/Items': RouteRecordInfo<'/Items', '/Items', Record<never, never>, Record<never, never>>,
    '/Login': RouteRecordInfo<'/Login', '/Login', Record<never, never>, Record<never, never>>,
    '/Map': RouteRecordInfo<'/Map', '/Map', Record<never, never>, Record<never, never>>,
    '/NotFound': RouteRecordInfo<'/NotFound', '/NotFound', Record<never, never>, Record<never, never>>,
    '/PaperDetail': RouteRecordInfo<'/PaperDetail', '/PaperDetail', Record<never, never>, Record<never, never>>,
    '/Papers': RouteRecordInfo<'/Papers', '/Papers', Record<never, never>, Record<never, never>>,
    '/Profile': RouteRecordInfo<'/Profile', '/Profile', Record<never, never>, Record<never, never>>,
    '/Register': RouteRecordInfo<'/Register', '/Register', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/Home.vue': {
      routes: '/Home'
      views: never
    }
    'src/pages/Items.vue': {
      routes: '/Items'
      views: never
    }
    'src/pages/Login.vue': {
      routes: '/Login'
      views: never
    }
    'src/pages/Map.vue': {
      routes: '/Map'
      views: never
    }
    'src/pages/NotFound.vue': {
      routes: '/NotFound'
      views: never
    }
    'src/pages/PaperDetail.vue': {
      routes: '/PaperDetail'
      views: never
    }
    'src/pages/Papers.vue': {
      routes: '/Papers'
      views: never
    }
    'src/pages/Profile.vue': {
      routes: '/Profile'
      views: never
    }
    'src/pages/Register.vue': {
      routes: '/Register'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
